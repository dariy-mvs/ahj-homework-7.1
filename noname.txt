const http = require('http');
const Koa = require('koa');
const koaBody = require('koa-body');
const app = new Koa();

app.use(koaBody({
  urlencoded: true,
  text: true,
  json: true,
  multipart: true,
}));

// => CORS
app.use(async (ctx, next) => {
  const origin = ctx.request.get('Origin');
  if (!origin) {
    return await next();
  }

  const headers = { 'Access-Control-Allow-Origin': '*', };

  if (ctx.request.method !== 'OPTIONS') {
    ctx.response.set({...headers});
    try {
      return await next();
    } catch(e) {
      e.headers = {...e.headers, ...headers};
      throw e;
    }
  }

  if (ctx.request.get('Access-Control-Request-Method')) {
    ctx.response.set({
      ...headers,
      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH',
    });

    if (ctx.request.get('Access-Control-Request-Headers')) {
      ctx.response.set('Access-Control-Allow-Headers', ctx.request.get('Access-Control-Request-Headers'));
    }

    ctx.response.status = 204;
    ctx.response.body = {'response': 'server response'};
    console.log('server started');
    await next();
  };
});

const port = process.env.PORT || 7070;
http.createServer(app.callback()).listen(port)

// const http = require('http');
// const server = http.createServer((req, res) => {
//   console.log(req.headers);
//   res.end('server response');
// });

// const port = 7070;
// // слушаем определённый порт
// server.listen(port, (err) => {
//     if (err) {
//       return console.log('Error occured:', error)
//     }
//     console.log(`server is listening on ${port}`)
// });